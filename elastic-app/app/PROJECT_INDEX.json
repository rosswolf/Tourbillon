{"at":"2025-09-04T00:39:38.956843","root":".","tree":[".","\u251c\u2500\u2500 ai_assets/ (22 files)","\u2502   \u2514\u2500\u2500 gremlins/ (20 files)","\u251c\u2500\u2500 cc0_assets/ (503 files)","\u2502   \u251c\u2500\u2500 fantasy_ [version 2.0]/ (64 files)","\u2502   \u2502   \u251c\u2500\u2500 cave_/ (8 files)","\u2502   \u2502   \u251c\u2500\u2500 desert_/ (9 files)","\u2502   \u2502   \u251c\u2500\u2500 fantasy_/ (12 files)","\u2502   \u2502   \u251c\u2500\u2500 forest_/ (8 files)","\u2502   \u2502   \u251c\u2500\u2500 swamp_/ (8 files)","\u2502   \u2502   \u251c\u2500\u2500 taiga_/ (8 files)","\u2502   \u2502   \u2514\u2500\u2500 tundra_/ (11 files)","\u2502   \u251c\u2500\u2500 interface/ (6 files)","\u2502   \u2502   \u2514\u2500\u2500 status_bar/ (6 files)","\u2502   \u251c\u2500\u2500 kenney_map-pack/ (195 files)","\u2502   \u2502   \u251c\u2500\u2500 PNG/ (188 files)","\u2502   \u2502   \u251c\u2500\u2500 Spritesheet/ (1 files)","\u2502   \u2502   \u251c\u2500\u2500 Tilesheet/ (2 files)","\u2502   \u2502   \u2514\u2500\u2500 Vector/ (1 files)","\u2502   \u251c\u2500\u2500 LEVEL-1/ (5 files)"],"stats":{"total_files":754,"total_directories":135,"fully_parsed":{"gdscript":79,"python":7,"godot_scene":37,"godot_shader":4},"listed_only":{"json":20,"import":587,"shell":1,"gdscript":11,"tres":8},"markdown_files":20},"f":{"godot_compile_check.gd":["g",["_init:0:()>void:check_all_scripts,check_autoloads:","check_autoloads:0:()>void::","check_all_scripts:0:()>void:_check_directory_recursive,_check_script:","_check_directory_recursive:0:(dir:DirAccess, path:String)>void:_check_directory_recursive,_check_script:","_check_script:0:(script_path:String)>void:_check_source_for_errors,_extract_class_name,_try_instantiate_class:","_extract_class_name:0:(source:String)>String::","_try_instantiate_class:0:(class_name_str:String, script_path:String)>void::","_check_source_for_errors:0:(source:String, script_path:String)>void:_extract_function_name:","_extract_function_name:0:(line:String)>String::"]],"check_type_safety.py":["p",["check_godot_compilation:332:(verbose:bool = False)>Tuple[bool, str]::Check if the Godot project compiles without errors.","main:414:():check_file,check_godot_compilation,print_report:Main entry point for the presubmit hook."],{"TypeSafetyChecker":["15",["__init__:16:(self, verbose:bool = False)::","check_file:63:(self, filepath:Path)>bool:_check_collection_typing,_check_function_typing,_check_nested_dictionary,_check_onready_typing,_check_variable_typing:Check a single GDScript file for type safety violations.","_check_variable_typing:133:(self, line:str, line_num:int, filepath:Path)>None::Check for untyped variable declarations.","_check_function_typing:194:(self, line:str, line_num:int, filepath:Path)>None:_split_params:Check for untyped function parameters and return types.","_check_collection_typing:249:(self, line:str, line_num:int, filepath:Path)>None::Check for untyped arrays and dictionaries.","_check_nested_dictionary:269:(self, line:str, line_num:int, filepath:Path)>None::Check for nested typed dictionaries (Godot limitation).","_check_onready_typing:278:(self, line:str, line_num:int, filepath:Path)>None::Check for untyped @onready variables.","_split_params:292:(self, params:str)>List[str]::Split function parameters, handling nested parentheses.","print_report:316:(self)>None::Print the errors and warnings found."]]}],"claude_game_tester.py":["p",["main:356:():start,stop,test_basic_interaction,test_card_gameplay,wait:Simple CLI for testing"],{"ClaudeGameTester":["23",["__init__:36:(self, headless:bool = False, verbose:bool = True)::","log:47:(self, message:str, level:str = \"info\")::Log a message","build:54:(self)>bool:log:Build the Godot project","start:65:(self, build_first:bool = True)>bool:build,click_canvas,log,start:Start the game server and browser","stop:116:(self):log,stop,wait:Stop the game server and browser","click:139:(self, x:int, y:int):click,log:Click at specific coordinates","click_canvas:144:(self):click,log:Click on the game canvas to focus it","click_button:153:(self, text:str):click,log:Click a button by its text","hover:166:(self, x:int, y:int):log:Hover at specific coordinates","drag_card:173:(self, from_pos:Tuple[int, int], to_pos:Tuple[int, int], duration:float = 0.5):log:Drag a card from one position to another","drag_and_drop:195:(self, selector_from:str, selector_to:str):log:Drag from one element to another using selectors","press_key:210:(self, key:str):log:Press a keyboard key","type_text:215:(self, text:str):log:Type text","wait:222:(self, seconds:float):log:Wait for a specified time","take_screenshot:227:(self, name:str = \"screenshot\")>Path:log:Take a screenshot","get_canvas_info:236:(self)>Optional[Dict[str, Any]]:log:Get information about the game canvas","find_clickable_areas:258:(self)>list:log:Find areas that might be clickable (experimental)","compare_screenshots:289:(self, name1:str, name2:str)>float:log:Compare two screenshots (requires additional libraries)","wait_for_animation:295:(self, timeout:float = 2.0):log:Wait for animations to complete","test_basic_interaction:303:(self):click,get_canvas_info,log,press_key,take_screenshot,wait:Run a basic interaction test","test_card_gameplay:331:(self):click_button,drag_card,log,take_screenshot,wait:Test card game specific interactions"]]}],"fix_final_types.py":["p",["fix_all_remaining:10:()::Fix all remaining type safety issues.","main:233:():fix_all_remaining:"]],"fix_last_types.py":["p",["apply_fixes:167:()::Apply all manual fixes."]],"fix_remaining_types.py":["p",["fix_static_data:10:()::Fix static_data.gd dictionary typing issues.","fix_countdown:50:()::Fix countdown.gd render_label function.","fix_more_functions:68:()::Fix remaining function return types and parameters.","fix_arrays_and_dicts:109:()::Fix untyped arrays and dictionaries in various files.","fix_more_missing_types:169:()::Fix additional missing types in various files.","main:205:():fix_arrays_and_dicts,fix_countdown,fix_more_functions,fix_more_missing_types,fix_static_data:"]],"fix_type_safety.py":["p",["main:314:():fix_file:Main entry point for the type safety fixer."],{"TypeSafetyFixer":["13",["__init__:14:(self, verbose:bool = False)::","fix_file:18:(self, filepath:Path)>bool:infer_node_type,infer_type_from_literal,type_parameters:Fix type safety violations in a single GDScript file.","type_parameters:152:(self, params:str, filepath:Path, line_num:int)>str:infer_type_from_literal:Add types to function parameters.","infer_type_from_literal:217:(self, value:str)>Optional[str]::Infer type from a literal value.","infer_node_type:263:(self, value:str, var_name:str)>Optional[str]::Infer node type from @onready assignment."]]}],"sr/scenes/core/battle/goal_manager.gd":["g",["_init:0:()>void::"]],"sr/scenes/core/battle/gremlin_manager.gd":["g",["add_gremlin:0:(gremlin:Gremlin, slot:int = -1)>bool:_find_empty_slot:","get_gremlins_in_order:0:()>Array[Gremlin]::","get_gremlin_at_slot:0:(slot:int)>Gremlin::","get_topmost_gremlin:0:()>Gremlin::","get_bottommost_gremlin:0:()>Gremlin::","get_weakest_gremlin:0:()>Gremlin::","get_strongest_gremlin:0:()>Gremlin::","apply_poison_to_target:0:(stacks:int, target_type:String = \"topmost\")>void:_get_target_by_type:","execute_below_threshold:0:(threshold:int)>void:get_gremlins_in_order:","are_all_defeated:0:()>bool::","reset:0:()>void::","_find_empty_slot:0:()>int::","_get_target_by_type:0:(target_type:String)>Gremlin:get_bottommost_gremlin,get_strongest_gremlin,get_topmost_gremlin,get_weakest_gremlin:","_on_gremlin_defeated:0:(gremlin:Gremlin)>void::"]],"sr/scenes/core/battle/position_bimap.gd":["g",["add:0:(entity:BattleEntity, position:int)>void:contains,is_position_empty:","move:0:(entity:BattleEntity, new_position:int)>void:get_position,is_position_empty:","remove:0:(id:String)>void:contains:","contains:0:(id:String)>bool:get_position:","get_position:0:(id:String)>int::","get_entity:0:(position:int)>BattleEntity::","is_position_empty:0:(position:int)>bool::","get_id:0:(position:int)>String:get_entity:","has_id:0:(id:String)>bool:contains:","clear:0:()>void:clear:"]],"sr/scenes/core/effects/move_descriptor_effect.gd":["g",["_init:0:(move_descriptor:String, cost:Cost = null)::","activate:0:(source:Entity):activate:","get_intent_amount:0:()>int::"]],"sr/scenes/core/effects/one_time_effect.gd":["g",["_init:0:(template_id:String,  params:Dictionary, cost:Cost = null)::","activate:0:(source:Entity)::"]],"sr/scenes/core/effects/poison_consumer.gd":["g",["_init:0:(initial_value:int = 1)>void::","add_poison:0:(amount:int)>void::","process_beat:0:(context:BeatContext)>void:_trigger_poison:","_trigger_poison:0:()>void::","should_remove:0:()>bool::","get_poison_value:0:()>int::","reset:0:()>void:reset:"]],"sr/scenes/core/entities/battle_entity.gd":["g",["signal_moved:0:(new_position:int)>void:signal_moved:","signal_created:0:()>void:signal_created:","get_active_status_effects:0:()>Array[StatusEffect.Type]::","has_status_effect:0:(effect:StatusEffect.Type)::","decrement_status_effect:0:(effect:StatusEffect.Type)::","decrement_all_status_effects:0:()>void:decrement_status_effect:","apply_unit_damage:0:(initial_damage:int, attack_source:BattleEntity)>bool::"]],"sr/scenes/core/entities/battleground_entity.gd":["g",["_get_type:0:()>Entity.EntityType::"],{"BattlegroundEntity":["0",["build:0:()>BattlegroundEntity::"]]}],"sr/scenes/core/entities/button.gd":["g",["_init:0:()>void::","get_card_instance_id:0:()>String::","activate_slot_effect:0:(source:Entity, target:Entity):activate_slot_effect:","_get_type:0:()>Entity.EntityType::"],{"EngineButtonEntity":["0",["with_engine_slot:0:(engine_slot:EngineSlot)>EngineButtonEntityBuilder::","with_is_activation_button:0:(is_activation_button:bool)>EngineButtonEntityBuilder::","build:0:()>EngineButtonEntity::"]]}],"sr/scenes/core/entities/card.gd":["g",["has_instinct_effect:0:()>bool::","has_slot_effect:0:()>bool::","activate_slot_effect:0:(source:Entity, target:Entity)>bool::","activate_instinct_effect:0:(source:Entity, target:Entity)>bool::","_get_type:0:()>Entity.EntityType::"],{"Card":["0",["with_group_template_id:0:(group_template_id:String)>CardBuilder::","with_rarity:0:(type:Card.RarityType)>CardBuilder::","with_art_image_uid:0:(art_image_uid:String)>CardBuilder::","with_cursor_image_uid:0:(cursor_image_uid:String)>CardBuilder::","with_rules_text:0:(rules_text:String)>CardBuilder::","with_slot_effect:0:(move_descriptor:String)>CardBuilder::","with_instinct_effect:0:(move_descriptor:String)>CardBuilder::","with_card_cost:0:(required_resources:Dictionary)>CardBuilder::","with_durability:0:(durability_in:int)>CardBuilder::","build:0:()>Card::"]]}],"sr/scenes/core/entities/entity.gd":["g",["_get_type:0:()>Entity.EntityType::"],{"Entity":["0",["with_instance_id:0:(instance_id:String)>EntityBuilder::","with_template_id:0:(template_id:String)>EntityBuilder::","with_display_name:0:(display_name:String)>EntityBuilder::","build_entity:0:(entity:Entity)>Entity:__generate_instance_id,__requires_template_id:"]]}],"sr/scenes/core/entities/goal.gd":["g",["_get_type:0:()>Entity.EntityType::"],{"Goal":["0",["with_text:0:(text_in:String)>GoalBuilder::","with_reward:0:(reward_in:String)>GoalBuilder::","with_achieve:0:(achieve_in:String)>GoalBuilder::","with_before_n_ticks:0:(ticks_in:int)>GoalBuilder::","with_punishment:0:(defeat_in:String)>GoalBuilder::","build:0:()>Goal::"]]}],"sr/scenes/core/entities/gremlin.gd":["g",["_init:0:()>void::","_ready:0:()>void::","process_beat:0:(context:BeatContext)>void:_trigger_disruption,process_beat:","take_damage:0:(amount:int, pierce:bool = false, pop:bool = false)>void:_on_defeated:","apply_poison:0:(stacks:int)>void::","apply_burn:0:(ticks:int)>void::","get_poison_stacks:0:()>int::","heal:0:(amount:int)>void::","add_shields:0:(amount:int)>void::","can_be_executed:0:(threshold:int)>bool::","execute:0:()>void:_on_defeated:","_trigger_disruption:0:()>void:_apply_disruption:","_apply_disruption:0:()>void::","get_disruption_text:0:()>String::","_on_defeated:0:()>void:_remove_disruptions:","_remove_disruptions:0:()>void::","add_beat_consumer:0:(consumer:BeatConsumer)>void::","remove_beat_consumer:0:(consumer:BeatConsumer)>void::","reset:0:()>void::","_get_type:0:()>Entity.EntityType::"],{"Gremlin":["0",["with_name:0:(name:String)>GremlinBuilder::","with_hp:0:(hp:int)>GremlinBuilder::","with_shields:0:(amount:int)>GremlinBuilder::","with_moves:0:(moves:String)>GremlinBuilder::","with_slot:0:(slot:int)>GremlinBuilder::","build:0:()>Gremlin::"]]}],"sr/scenes/core/entities/hero.gd":["g",["_init:0:()>void::","_get_type:0:()>Entity.EntityType::","reset_start_of_battle:0:()>void::","get_force_resource:0:(force_type:GameResource.Type)>CappedResource::","has_force:0:(force_type:GameResource.Type, amount:int)>bool:get_force_resource:","has_forces:0:(requirements:Dictionary)>bool:has_force:","consume_force:0:(force_type:GameResource.Type, amount:int)>bool:get_force_resource:","consume_forces:0:(requirements:Dictionary)>bool:consume_force,has_forces:","add_force:0:(force_type:GameResource.Type, amount:int)>void:get_force_resource:","add_forces:0:(production:Dictionary)>void:add_force:","signal_moved:0:(new_position:int)>void::","signal_created:0:()>void::"],{"Hero":["0",["with_image_name:0:(image_name:String)>HeroBuilder::","build:0:()>Hero:_init:"]]}],"sr/scenes/core/entities/mainplate.gd":["g",["_get_type:0:()>Entity.EntityType::","is_valid_position:0:(pos:Vector2i)>bool::","has_card_at:0:(pos:Vector2i)>bool::","get_card_at:0:(pos:Vector2i)>Card::","place_card:0:(card:Card, pos:Vector2i)>bool:__trigger_bonus,has_card_at,is_valid_position:","remove_card:0:(pos:Vector2i)>Card::","expand_grid:0:(direction:String)>bool::","get_cards_in_order:0:()>Array[Card]:__get_positions_in_order,get_card_at,has_card_at:","process_beat:0:(context:BeatContext)>void:__activate_card,__get_positions_in_order,__should_card_activate,get_card_at,has_card_at:","count_cards_with_tag:0:(tag:String)>int:get_cards_in_order:","get_adjacent_positions:0:(pos:Vector2i)>Array[Vector2i]:is_valid_position:","is_isolated:0:(pos:Vector2i)>bool:get_adjacent_positions,has_card_at:","set_bonus_square:0:(pos:Vector2i, bonus_type:String)>void:has_card_at,is_valid_position:","is_bonus_square:0:(pos:Vector2i)>bool::","get_bonus_type:0:(pos:Vector2i)>String::","clear_bonus_squares:0:()>void::","assign_random_bonus_squares:0:()>void:has_card_at,set_bonus_square:"],{"Mainplate":["0",["_init:0:(card:Card)::","with_grid_size:0:(size:Vector2i)>MainplateBuilder::","with_max_grid_size:0:(size:Vector2i)>MainplateBuilder::","build:0:()>Mainplate::"]]}],"sr/scenes/core/global_game_manager.gd":["g",["_ready:0:()>void::","_process:0:(_delta:float)>void:get_current_tick:","allow_activations:0:()>void::","disallow_activations:0:()>void::","reset_game_state:0:()>void::","activate:0:(source_id:String, target_id:String):activate:","get_selected_card:0:()>Card::","end_turn:0:()>void:allow_activations,disallow_activations:","end_game:0:()::","get_current_tick:0:()>int::","get_current_beat:0:()>int::"]],"sr/scenes/core/instance_catalog.gd":["g",["has_instance:0:(instance_id:String)>bool::","get_instance:0:(instance_id:String)>Node::","set_instance:0:(instance:Node)>void::","clear_instance:0:(instance_id:String, delete:bool)>void::"]],"sr/scenes/core/library.gd":["g",["_init:0:()>void::","print_hand_size:0:()>void:get_count:","add_card_to_zone:0:(card:Card, zone:Zone):__get_zone_object,add_card:","move_card_to_zone2:0:(card_instance_id:String, from_zone:Zone, to_zone:Zone, override_limit:bool = false)>bool:__get_zone_object,add_card,get_count,remove_card:","add_card_to_deck:0:(card:Card)>void:add_card,add_card_to_zone,get_count:","add_cards_to_deck:0:(cards:Array[Card])>void:add_card_to_deck:","discard_hand:0:()>void:get_all_cards,move_card_to_zone2:","draw_card:0:(how_many:int):add_card_to_zone,draw_top,get_all_cards,get_count,move_card_to_zone2,shuffle:","draw_new_hand:0:(desired_hand_size:int):discard_hand,draw_card,get_count:","get_cards_for_selection:0:(selection_id:String)>Array[Card]:__get_card_for_selection,get_count:","card_template_already_selected:0:(candidate_template_id:String, selectable_cards:Array[Card])>bool::","shuffle_libraries:0:()>void:shuffle:","get_card:0:(card_instance_id:String)>Card:__get_zone_object,get_card:","get_card_zone:0:(card_instance_id:String)>Zone::","get_card_ids_in_zone:0:(zone:Zone)>Array[String]:__get_zone_object,get_all_card_ids:","clear_all_zones:0:()>void:clear:"],{"Library":["0",["_init:0:(type:Zone)::","add_card:0:(card:Card)>void::","add_cards:0:(cards:Array[Card])>void::","remove_card:0:(card_instance_id:String)>Card::","get_card:0:(card_instance_id:String)>Card::","get_all_cards:0:()>Array[Card]::","contains_card:0:(card_instance_id:String)>bool::","get_all_card_ids:0:()>Array[String]::","get_count:0:()>int::","shuffle:0:()>void:shuffle:","peek_top:0:()>Card::","draw_top:0:()>Card::","get_cards_by_template:0:(template_id:String)>Array[Card]::","clear:0:()>void::"]]}],"sr/scenes/core/resources/capped_resource.gd":["g",["_init:0:(starting_amount:int, max_amount:int, on_change:Callable, on_max_change:Callable, can_die:bool = false)::","increment:0:(delta:int)::","decrement:0:(delta:int)::","have_enough:0:(cost:int)>bool::","send_signal:0:()>void::"]],"sr/scenes/core/resources/cost.gd":["g",["_init:0:(resources:Dictionary[GameResource.Type, int])::","can_satisfy:0:(source:Entity, target:Entity)>bool:get_unsatisfied_resources:","signal_unsatisfied:0:(source:Entity, target:Entity)>void:get_unsatisfied_resources:","get_unsatisfied_resources:0:(source:Entity, target:Entity)>Array[GameResource.Type]:__can_satisfy_requirement:","satisfy:0:(source:Entity, target:Entity)>bool:__satisfy_requirement,can_satisfy,signal_unsatisfied:","get_energy_color:0:()>GameResource.Type::","get_energy_cost:0:()>int::"],{"Cost":["0",["_init:0:(source_in:Entity, target_in:Entity)::"]]}],"sr/scenes/core/resources/relic_manager.gd":["g",["add_relic:0:(relic_template_id:String)>Relic::","has_relic:0:(relic_template_id:String)::"]],"sr/scenes/core/stats_manager.gd":["g",["_init:0:()>void:setup_stats_listeners:","setup_stats_listeners:0:()>void::","_on_stat_signal:0:(amount:int, signal_name:String, )>void::","print_stats:0:()>void::"]],"sr/scenes/core/time/beat_consumer.gd":["g",["process_beat:0:(context:BeatContext)>void::","should_remove:0:()>bool::","reset:0:()>void::"]],"sr/scenes/core/time/beat_context.gd":["g",["_init:0:()>void::"]],"sr/scenes/core/time/beat_listener_entity.gd":["g",["process_beat:0:(context:BeatContext)>void::","get_priority:0:()>int::","is_active:0:()>bool::","reset:0:()>void::"]],"sr/scenes/core/time/beat_processor.gd":["g",["_ready:0:()>void::","process_beat:0:(context:BeatContext)>void:__check_end_conditions,__process_gears_phase,__process_gremlins_phase,__process_listeners_phase:","register_listener:0:(listener:BeatListenerEntity)>void::","unregister_listener:0:(listener:BeatListenerEntity)>void::","set_mainplate:0:(plate:Mainplate)>void::","set_gremlin_manager:0:(manager:GremlinManager)>void::","reset:0:()>void:reset:"]],"sr/scenes/core/time/timeline_manager.gd":["g",["_ready:0:()>void::","advance_time:0:(ticks:float)>void:__advance_beats_instant:","get_current_ticks:0:()>float::","get_current_beats:0:()>int::","reset:0:()>void:reset:"]],"sr/scenes/core/wave_manager.gd":["g",["spawn_wave:0:(wave_id:String = \"\")>void:_spawn_gremlin:","_spawn_gremlin:0:(gremlin_type:String)>void::","set_act:0:(act:int)>void::","get_current_wave_info:0:()>Dictionary::"]],"sr/scenes/countdown.gd":["g",["_ready:0:()>void::","render_label:0:()>String::","_process:0:(delta:float)>void:render_label:","_on_timer_timeout:0:()>void::"]],"sr/scenes/data/json_exporter.py":["p",["parse_arguments:476:()::Parse command line arguments.","main:536:():export_sheet_to_json:Main function - exports specified sheets from hardcoded spreadsheet IDs."],{"PublicSheetsToJsonExporter":["9",["__init__:10:(self, array_separator=\"|\")::","get_public_sheet_data:19:(self, spreadsheet_id, gid=0)::","convert_to_json:60:(self, data):_convert_value,_create_array_dict,_parse_params_field:","_apply_enum_prefix:186:(self, value, enum_prefix)::","_convert_value:222:(self, value, field_name=\"\", enum_prefix=None):_apply_enum_prefix,_is_float,_parse_params_field,_resolve_configuration_reference:","_resolve_configuration_reference:304:(self, value)::","_parse_params_field:330:(self, value, enum_prefix=None):_apply_enum_prefix,_resolve_configuration_reference:","_create_array_dict:402:(self, array_value, field_name)::","_is_float:426:(self, value)::Check if a string represents a float.","export_to_file:434:(self, json_data, output_file)::","export_sheet_to_json:451:(self, spreadsheet_id, output_file, gid=0):convert_to_json,export_to_file,get_public_sheet_data:"]]}],"sr/scenes/data/static_data.gd":["g",["_init:0:()>void:__build_enum_mappings:","parse_enum:0:(reference:String)>Variant::","_ready:0:()>void:build_field_indices,load_json_file:","build_field_indices:0:(data_dict:Dictionary)>Dictionary:add_index_key_variants:","add_index_key_variants:0:(index_keys:Array, value)::","load_json_file:0:(path:String)>Dictionary:resolve_json_data,resolve_json_record:","get_data_type_name:0:(data_dict:Dictionary)>String::","get_data_and_indices_for_type:0:(data_type:String)>Array::","lookup_in_data:0:(data_dict:Dictionary, field_to_filter:String, filter_value:Variant, field_to_return:String)>Array:get_data_type_name,lookup_in_data_linear,resolve_filter_value:","resolve_filter_value:0:(filter_value):__is_enum_reference,parse_enum:","lookup_in_data_linear:0:(data_dict:Dictionary, field_to_filter:String, filter_value:Variant, field_to_return:String)>Array:compare_numeric_values,resolve_filter_value:","compare_numeric_values:0:(field_value, filter_value, resolved_filter_value)>bool::","resolve_json_data:0:(data:Array)>Dictionary:convert_array_to_nested_dict,resolve_json_record:","resolve_json_record:0:(record:Dictionary)>Dictionary:resolve_value:","resolve_value:0:(value):normalize_numeric_value,parse_enum,resolve_configuration_reference,resolve_value:","normalize_numeric_value:0:(value:Variant)>Variant::","resolve_configuration_reference:0:(config_ref:String)::","convert_array_to_nested_dict:0:(data_array:Array)>Dictionary::","get_card_by_id:0:(card_id:String)>Dictionary::","get_mob_by_id:0:(mob_id:String)>Dictionary::","get_goals_by_id:0:(wave_id:String)>Dictionary::","get_relic_by_id:0:(relic_id:String)>Dictionary::","get_hero_by_id:0:(hero_id:String)>Dictionary::","get_wave_by_id:0:(wave_id:String)>Dictionary::","get_random_wave_for_act:0:(act:int)>Dictionary::","get_all_waves_for_act:0:(act:int)>Array::","clear_lookup_cache:0:()>void::","clear_enum_cache:0:()::","get_cache_stats:0:()>Dictionary::"]],"sr/scenes/game.gd":["g",["_ready:0:()>void::","_process:0:(delta:float)>void::","add_card_to_hand_by_instance:0:(card_instance_id:String)>void:add_card_to_hand:","add_card_to_hand:0:(card:Card)>void::","remove_card_from_hand_ui:0:(card_instance_id:String)>void::","format_elapsed_time:0:(timer:Timer)>String:format_time_string:","format_time_string:0:(time_seconds:float)>String::","format_elapsed_time_hex:0:(timer:Timer)>String:format_time_string_hex:","format_time_string_hex:0:(time_seconds:float)>String::"]],"sr/scenes/global_signals.gd":["g",["signal_ui_started_game:0:()>void::","signal_ui_started_battle:0:()>void::","signal_ui_quit_to_main:0:()>void::","signal_ui_execute_selected_onto_hovered:0:(source_instance_id:String, target_instance_id:String)>void::","signal_ui_selected_changed:0:(instance_id:String)>void::","signal_ui_slotted_card:0:(slot_name:String, image_path:String)>void::","signal_ui_changed_cursor_image:0:(image_path:String)>void::","signal_ui_card_hovered:0:(card_instance_id:String)>void::","signal_ui_card_unhovered:0:(card_instance_id:String)>void::","signal_ui_card_clicked:0:(card_instance_id:String)>void::","signal_ui_time_bump:0:()>void::","signal_core_begin_turn:0:()>void::","signal_core_end_turn:0:()>void::","signal_core_end_battle:0:()>void::","signal_core_game_over:0:()>void::","signal_core_game_win:0:()>void::","signal_core_arena_created:0:(size:int)>void::","signal_core_activation_with_non_activatable_source:0:(source_id:String)>void::","signal_core_activation_source_requires_target:0:(source_id:String)>void::","signal_core_activation_source_wrong_target:0:(source_id:String, target_id:String)>void::","signal_core_hero_created:0:(hero_instance_id:String)>void::","signal_core_hero_moved:0:(hero_instance_id:String, new_location:int)>void::","signal_core_mob_created:0:(mob_instance_id:String)>void::","signal_core_mob_health_changed:0:(mob_instance_id:String, new_health:int)>void::","signal_core_mob_check_state:0:(mob_instance_id:String, new_health:int)>void::","signal_core_mob_block_changed:0:(mob_instance_id:String, new_value:int)>void::","signal_core_mob_armor_changed:0:(mob_instance_id:String, new_value:int)>void::","signal_core_mob_moved:0:(mob_instance_id:String, new_location:int)>void::","signal_core_mob_intent_updated:0:(mob_instance_id:String)>void::","signal_core_card_slotted:0:(slot_instance_id:String)>void::","signal_core_card_unslotted:0:(slot_instance_id:String)>void::","signal_core_card_replaced:0:(old_card_id:String, new_card_id:String)>void::","signal_core_gear_process_beat:0:(card_instance_id:String, context:BeatContext)>void::","signal_core_slot_add_cooldown:0:(instance_id:String, duration:float)>void::","signal_core_slot_activated:0:(trigger_card_id:String)>void::","signal_core_card_selection:0:(selection_id:String, landing_zone:Library.Zone)>void::","signal_core_card_drawn:0:(card_instance_id:String)>void::","signal_core_card_played:0:(card_instance_id:String)>void::","signal_core_card_played_but_cant_satisfy_cost:0:(card_instance_id:String)>void::","signal_core_missing_resource:0:(type:GameResource.Type)>void::","signal_core_card_discarded:0:(card_instance_id:String)>void::","signal_core_card_destroyed:0:(card_instance_id:String)>void::","signal_core_card_removed_from_hand:0:(card_instance_id:String)>void::","signal_core_hero_resource_changed:0:(type:GameResource.Type, new_amount:int)>void::","signal_core_mob_resource_changed:0:(mob_instance_id:String, type:GameResource.Type, new_amount:int)>void::","signal_core_relic_added:0:(relic:Relic)>void::","signal_core_relic_removed:0:(relic_instance_id:String)>void::","signal_core_max_hand_size_reached:0:()>void::","signal_core_battleground_targeting_preview_changed:0:(space_index:int)>void::","signal_stats_cards_drawn:0:(amount:int)>void::","signal_stats_cards_popped:0:(amount:int)>void::","signal_stats_cards_played:0:(amount:int)>void::","signal_stats_cards_slotted:0:(amount:int)>void::","signal_stats_slots_activated:0:(amount:int)>void::","signal_stats_energy_spent:0:(amount:int)>void::","signal_stats_gold_spent:0:(amount:int)>void::","signal_ui_time_updated:0:(tick_display:String)>void::","signal_ui_card_ticks_resolved:0:()>void::"]],"sr/scenes/main_menu.gd":["g",["_ready:0:()>void::"]],"sr/scenes/timer_service.gd":["g",["create_timer:0:(duration:float)>SceneTreeTimer:create_timer:","create_unpauseable_timer:0:(duration:float)>SceneTreeTimer:create_timer:"]],"sr/scenes/ui/battleground/ui_battleground.gd":["g",["_ready:0:()>void::"]],"sr/scenes/ui/click_and_drag/click_and_drag.gd":["g",["_ready:0:()>void::","_input:0:(event:InputEvent)>void:add_dragging_visual,remove_dragging_visual:","add_dragging_visual:0:():get_global_mouse_position,get_relevant_visual:","remove_dragging_visual:0:()>void::","get_relevant_visual:0:()>Node::","get_global_mouse_position:0:()>Vector2:get_global_mouse_position:"]],"sr/scenes/ui/click_and_drag/cursor.gd":["g",["is_valid_target:0:()::","update_image:0:(texture_uid:String)>void::"]],"sr/scenes/ui/click_and_drag/global_selection_manager.gd":["g",["_init:0:()>void::","set_hovered:0:(instance_id:String)::","clear_hovered_known:0:(instance_id:String):clear_hovered_force:","clear_hovered_force:0:()>void::","get_hovered:0:()>String::","has_hovered:0:()>bool::","is_card_hovered:0:()>bool::","is_card_selected:0:()>bool::","set_selected_known:0:(instance_id:String):set_selected_force:","set_selected_force:0:()::","get_selected:0:()>String::","has_selected:0:()>bool::","activate_selected_onto_hovered:0:(last_pos:Vector2)>void:__clear_selected_force:"]],"sr/scenes/ui/click_and_drag/image_cursor.gd":["g",["_ready:0:()>void::","set_cursor_position:0:(pos:Vector2)::","_physics_process:0:(delta:float)>void::","update_image:0:(texture_uid:String)>void::"]],"sr/scenes/ui/entities/engine/ui_engine_slot.gd":["g",["_ready:0:()>void:_ready:","create_card_ui:0:()::","destroy_card_ui:0:()>void::","_process:0:(delta:float)>void:__update_progress_display:","pct:0:(numerator:float, denominator:float)::","_on_mouse_entered:0:()>void:_on_mouse_entered,create_card_ui:","_on_mouse_exited:0:()>void:_on_mouse_exited,destroy_card_ui:","update_progress_display:0:(percent:float, is_ready:bool = false)>void::","show_activation_feedback:0:()>void::","reset:0:()>void::","set_grid_position:0:(pos:Vector2i)>void::","set_active:0:(active:bool)>void::","can_accept_card:0:()>bool::","set_as_bonus_square:0:(type:String = \"draw_one_card\")>void::"]],"sr/scenes/ui/entities/engine/ui_engine_slot_simple.gd":["g",["_ready:0:()>void:__update_empty_visual:","set_grid_position:0:(pos:Vector2i)>void::","set_active:0:(active:bool)>void::","set_as_bonus_square:0:(type:String = \"draw_one_card\")>void:__update_bonus_visual:","set_occupied_visual:0:(card_name:String, texture:Texture2D = null)>void::","set_empty_visual:0:()>void:__update_empty_visual:","show_progress:0:(percent:float, is_ready:bool = false)>void::","hide_progress:0:()>void::","set_highlighted:0:(highlighted:bool)>void:__update_bonus_visual:"]],"sr/scenes/ui/entities/engine/ui_texture_button.gd":["g",["_ready:0:()>void::","create_button_entity:0:(engine_slot:EngineSlot, is_activation_button:bool)::","_on_mouse_entered:0:()>void::","_on_mouse_exited:0:()>void::","_exit_tree:0:()>void:_on_mouse_exited:"]],"sr/scenes/ui/entities/goals/ui_goal.gd":["g",["_ready:0:()>void::","set_entity_data:0:(entity:Entity)>void:set_entity_data:","pct:0:(numerator:float, denominator:float)::","_process:0:(delta:float)>void:pct:"]],"sr/scenes/ui/entities/gremlins/ui_gremlin.gd":["g",["_ready:0:()>void:_ready:","set_entity_data:0:(entity:Entity)>void:__update_display,set_entity_data:","_process:0:(_delta:float)>void:__get_disruption_text:"]],"sr/scenes/ui/entities/ui_entity.gd":["g",["_ready:0:()>void::","set_entity_data:0:(entity:Entity)::","_exit_tree:0:()>void:__on_mouse_exited:"]],"sr/scenes/ui/gremlins/ui_gremlin_panel.gd":["g",["_ready:0:()>void:__setup_background:","spawn_test_gremlins:0:()>void:__create_gremlin_from_data:"]],"sr/scenes/ui/hand/card_ui.gd":["g",["_ready:0:()>void::","set_card_data:0:(card:Card)>void:add_slot_icon:","refresh:0:()>void::","add_slot_icon:0:(icon_image:String, value:String, container:Container, font_size:GameIcon.TextSize)>void::","_on_gui_input:0:(event:InputEvent)>void::"]],"sr/scenes/ui/hand/hand_container.gd":["g",["_ready:0:()>void::","_input:0:(event:InputEvent)>void:arrange_cards:","add_card:0:(card_ui:CardUI, card:Card)>void:arrange_cards:","remove_card:0:(card_instance_id:String)>CardUI:arrange_cards:","arrange_cards:0:()>void:__animate_card_to_position,__calculate_card_layout:","_on_card_mouse_entered:0:(card:CardUI)>void:__calculate_base_position_for_card:","_on_card_mouse_exited:0:(card:CardUI)>void:arrange_cards:","_on_selected_changed:0:(card_instance_id:String)>void:deselect_current_card,toggle_card_selection_on:","toggle_card_selection_off:0:(card:CardUI)>void:deselect_current_card:","toggle_card_selection_on:0:(card:CardUI)>void:__raise_card,deselect_current_card:","deselect_current_card:0:()>void:arrange_cards:","_on_card_clicked:0:(card_instance_id:String)>void::","_notification:0:(what:int)>void:arrange_cards:"]],"sr/scenes/ui/hud/card_selection_modal.gd":["g",["_ready:0:()>void::","_process:0:(delta:float)>void::","resume:0:()>void::"]],"sr/scenes/ui/hud/countdown.gd":["g",["_ready:0:()>void::","_process:0:(delta:float)>void::"]],"sr/scenes/ui/hud/game_over_modal.gd":["g",["_ready:0:()>void::","_process:0:(delta:float)>void::","resume:0:()>void::"]],"sr/scenes/ui/hud/hud.gd":["g",["_ready:0:()>void::"]],"sr/scenes/ui/hud/menu_bar.gd":["g",["_ready:0:()>void::","_on_resource_changed:0:(type:GameResource.Type, value:int)>void::"]],"sr/scenes/ui/hud/pause_modal.gd":["g",["_ready:0:()>void::","_process:0:(delta:float)>void::","resume:0:()>void::","pause:0:()>void::","_on_resume_pressed:0:()>void:resume:","_on_quit_pressed:0:()>void::"]],"sr/scenes/ui/icons/game_icon.gd":["g",["_ready:0:()>void::","get_label:0:()>Label::","get_very_small_font_size:0:()>int::","get_small_font_size:0:()>int::","get_large_font_size:0:()>int::","set_text:0:(value:int, size:TextSize, font_color:Color = Color.WHITE)>void:set_string_text:","set_string_text:0:(value:String, size:TextSize, font_color:Color = Color.WHITE)>void:get_label,set_label_font:","set_label_font:0:(size:TextSize, font_color:Color)>void:get_label,get_large_font_size,get_small_font_size,get_very_small_font_size:"]],"sr/scenes/ui/icons/relics/relic_icon.gd":["g",["_ready:0:()>void:_ready:","set_relic:0:(relic:Relic)>void:get_label:","get_label:0:()>Label::","get_small_font_size:0:()>int::","get_large_font_size:0:()>int::"]],"sr/scenes/ui/icons/slot_icons/slot_icon.gd":["g",["_ready:0:()>void:_ready:","set_slot_image:0:(name:String)>void::","get_label:0:()>Label::","get_small_font_size:0:()>int::","get_large_font_size:0:()>int::"]],"sr/scenes/ui/icons/targeting/targeting_icon.gd":["g",["_ready:0:()>void:_ready:","get_label:0:()>Label::","get_small_font_size:0:()>int::","get_large_font_size:0:()>int::"]],"sr/scenes/ui/mainplate/grid_mapper.gd":["g",["_init:0:(logical:Vector2i = Vector2i(4, 4), physical:Vector2i = Vector2i(8, 8))>void:__calculate_offset:","to_physical:0:(logical_pos:Vector2i)>Vector2i:is_valid_logical:","to_logical:0:(physical_pos:Vector2i)>Variant:is_valid_logical:","is_valid_logical:0:(pos:Vector2i)>bool::","is_active_physical:0:(pos:Vector2i)>bool:to_logical:","get_active_physical_positions:0:()>Array[Vector2i]:to_physical:","expand:0:(expansion_type:String = \"row\")>bool:__calculate_offset:","reset:0:(initial_size:Vector2i = Vector2i(4, 4))>void:__calculate_offset:","get_logical_size:0:()>Vector2i::","get_physical_size:0:()>Vector2i::"]],"sr/scenes/ui/mainplate/ui_mainplate.gd":["g",["_ready:0:()>void:_ready:","get_cards_in_order:0:()>Array[Card]:get_cards_in_order:","request_card_placement:0:(card:Card, logical_position:Vector2i)>bool::","expand_mainplate:0:(expansion_type:String = \"row\")>bool:__update_slot_visuals:","is_valid_position:0:(logical_position:Vector2i)>bool::","get_slot_at:0:(position:Vector2i)>EngineSlot::","get_occupied_slots:0:()>Array[EngineSlot]::","count_gears_with_tag:0:(tag:String)>int:get_occupied_slots:","remove_gear_at_physical:0:(physical_pos:Vector2i)>Card:request_card_removal:","request_card_removal:0:(logical_pos:Vector2i)>Card::","can_accept_card_at_physical:0:(physical_pos:Vector2i, require_empty:bool = false)>bool:is_valid_position:","get_card_at_physical:0:(physical_pos:Vector2i)>Card::","reset:0:()>void:__update_slot_visuals,reset:"]],"sr/scenes/ui/resources/revealed_resources_panel.gd":["g",["_ready:0:()>void::"]],"sr/scenes/ui/time/ui_beat_orchestrator.gd":["g",["_ready:0:()>void::","register_slot:0:(slot:EngineSlot)>void::","unregister_slot:0:(slot:EngineSlot)>void::","orchestrate_gear_fire:0:(slot:EngineSlot)>void::"]],"sr/scenes/ui/tourbillon/effect_visualizer.gd":["g",["_ready:0:()>void:_connect_effect_signals:","_connect_effect_signals:0:()>void::","_on_damage_dealt:0:(amount:int, target_position:Vector2)>void:_create_floating_text,_create_impact_particles:","_on_force_produced:0:(force_type:GameResource.Type, amount:int, source_position:Vector2)>void:_create_floating_text,_create_production_particles,_get_force_name:","_on_force_consumed:0:(force_type:GameResource.Type, amount:int, source_position:Vector2)>void:_create_floating_text,_get_force_name:","_on_card_drawn:0:(card_count:int, position:Vector2)>void:_create_floating_text:","_on_status_applied:0:(status_type:String, stacks:int, target_position:Vector2)>void:_create_floating_text,_create_status_particles:","_create_floating_text:0:(text:String, position:Vector2, color:Color)>void::","_create_impact_particles:0:(position:Vector2, color:Color)>void::","_create_production_particles:0:(position:Vector2, color:Color)>void::","_create_status_particles:0:(position:Vector2, color:Color, status_type:String)>void::","_get_force_name:0:(force_type:GameResource.Type)>String::","show_slot_effect:0:(slot:EngineSlot, effect_type:String, value:Variant = null)>void:_create_floating_text,_create_production_particles:"]],"sr/scenes/ui/tourbillon/floating_text.gd":["g",["_ready:0:()>void:_animate:","setup:0:(text_value:String, color_value:Color, duration_value:float = 1.0)>void::","_animate:0:()>void::"]],"sr/scenes/ui/tourbillon/time_display.gd":["g",["_ready:0:()>void:_update_display:","_on_time_updated:0:(tick_display:String)>void:_animate_beat_change,_animate_tick_change,_update_display:","_update_display:0:()>void::","_animate_tick_change:0:()>void::","_animate_beat_change:0:()>void::"]],"sr/scenes/ui/transitions/fade_to_black.gd":["g",["_ready:0:()>void::","go_to_scene:0:(scene:String, fade_color:Color = Color.BLACK, fade_duration:float = switch_duration)::"]],"sr/scenes/utilities/global_utilities.gd":["g",["set_seed:0:(world_seed:int)>void::","get_random_trigger_type:0:()>TriggerType::","get_engine_trigger_types:0:()>Array[TriggerType]::","load_image:0:(name:String)>Texture2D:load_image_uid:","load_slot_icon_image:0:(name:String)>Texture2D:load_image_uid:","load_image_uid:0:(uid:String)>Texture2D::","generate_random_numbers:0:(count:int, target_sum:int)>Array[int]::"]],"sr/scenes/utilities/sprite_control.gd":["g",["set_sprite:0:(sprite:AnimatedSprite2D, size:Vector2):__update_min_size:"]],"sr/scenes/win.gd":["g",["_ready:0:()>void::"]],"test_compile_check.gd":["g",["_ready:0:()::"]],"test_grid_visual.gd":["g",["_init:0:()::"]],"test_mainplate_debug.gd":["g",["_ready:0:():__find_nodes_of_type:"]],"test_mainplate_quick.gd":["g",["_ready:0:()::"]],"test_mainplate_simple.gd":["g",["_ready:0:()::"]],"test_mainplate_visuals.gd":["g",["_ready:0:()::","_take_screenshot:0:()::","_input:0:(event)::"]],"test_mainplate_working.gd":["g",["_ready:0:()::"]],"test_scene_load.gd":["g",["_ready:0:()::"]],"test_type_fixes.gd":["g",["_init:0:()::"]]},"g":[["ClaudeGameTester.test_card_gameplay","wait"],["ClaudeGameTester.hover","ClaudeGameTester.log"],["can_satisfy","get_unsatisfied_resources"],["set_selected_known","set_selected_force"],["TypeSafetyFixer.fix_file","infer_type_from_literal"],["ClaudeGameTester.press_key","ClaudeGameTester.log"],["move_card_to_zone2","remove_card"],["draw_new_hand","draw_card"],["PublicSheetsToJsonExporter._parse_params_field","_apply_enum_prefix"],["PublicSheetsToJsonExporter.export_sheet_to_json","export_to_file"],["create_unpauseable_timer","create_timer"],["ClaudeGameTester.test_basic_interaction","get_canvas_info"],["ClaudeGameTester.start","Gremlin.build"],["get_cards_in_order","get_cards_in_order"],["toggle_card_selection_off","deselect_current_card"],["ClaudeGameTester.click","ClaudeGameTester.log"],["add","contains"],["discard_hand","move_card_to_zone2"],["_get_target_by_type","get_topmost_gremlin"],["activate_selected_onto_hovered","__clear_selected_force"],["load_image","load_image_uid"],["ClaudeGameTester.hover","log"],["ClaudeGameTester.start","click_canvas"],["ClaudeGameTester.test_card_gameplay","ClaudeGameTester.wait"],["main","print_report"],["_ready","__find_nodes_of_type"],["ClaudeGameTester.click_canvas","click"],["draw_card","draw_top"],["get_cards_in_order","get_card_at"],["move_card_to_zone2","Library.remove_card"],["load_slot_icon_image","load_image_uid"],["add_card_to_deck","Library.get_count"],["ClaudeGameTester.start","EngineButtonEntity.build"],["ClaudeGameTester.press_key","log"],["process_beat","__check_end_conditions"],["format_elapsed_time","format_time_string"],["main","check_file"],["Entity.build_entity","__requires_template_id"],["ClaudeGameTester.test_card_gameplay","click_button"],["add_card_to_deck","add_card"],["place_card","is_valid_position"],["_process","__get_disruption_text"],["_init","__calculate_offset"],["main","test_basic_interaction"],["_ready","load_json_file"],["deselect_current_card","arrange_cards"],["get_card","get_card"],["end_turn","allow_activations"],["get_cards_for_selection","get_count"],["consume_force","get_force_resource"],["move_card_to_zone2","add_card"],["_on_defeated","_remove_disruptions"],["arrange_cards","__calculate_card_layout"],["ClaudeGameTester.drag_and_drop","ClaudeGameTester.log"],["consume_forces","has_forces"],["_on_mouse_exited","destroy_card_ui"],["resolve_filter_value","parse_enum"],["add_card_to_deck","Library.add_card"],["process_beat","__get_positions_in_order"],["TypeSafetyChecker.check_file","TypeSafetyChecker._check_collection_typing"],["_init","__build_enum_mappings"],["_on_card_drawn","_create_floating_text"],["process_beat","__activate_card"],["is_isolated","has_card_at"],["TypeSafetyChecker.check_file","TypeSafetyChecker._check_variable_typing"],["PublicSheetsToJsonExporter.export_sheet_to_json","convert_to_json"],["draw_card","Library.shuffle"],["clear_all_zones","Library.clear"],["set_entity_data","__update_display"],["_check_script","_try_instantiate_class"],["_process","pct"],["add_card_to_deck","add_card_to_zone"],["expand_mainplate","__update_slot_visuals"],["_ready","_connect_effect_signals"],["main","start"],["ClaudeGameTester.click_canvas","ClaudeGameTester.log"],["format_elapsed_time_hex","format_time_string_hex"],["_input","add_dragging_visual"],["ClaudeGameTester.drag_and_drop","log"],["draw_card","Library.get_all_cards"],["_init","check_all_scripts"],["resolve_filter_value","__is_enum_reference"],["add_card_to_hand_by_instance","add_card_to_hand"],["ClaudeGameTester.test_basic_interaction","wait"],["expand","__calculate_offset"],["_exit_tree","_on_mouse_exited"],["TypeSafetyChecker.check_file","_check_function_typing"],["ClaudeGameTester.test_basic_interaction","press_key"],["ClaudeGameTester.start","Hero.build"],["_on_time_updated","_animate_tick_change"],["_get_target_by_type","get_strongest_gremlin"],["TypeSafetyFixer.fix_file","infer_node_type"],["signal_created","signal_created"],["shuffle_libraries","Library.shuffle"],["set_bonus_square","has_card_at"],["_check_directory_recursive","_check_directory_recursive"],["TypeSafetyChecker.check_file","TypeSafetyChecker._check_nested_dictionary"],["_ready","_animate"],["draw_card","Library.get_count"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.wait"],["arrange_cards","__animate_card_to_position"],["PublicSheetsToJsonExporter.convert_to_json","_convert_value"],["execute","_on_defeated"],["ClaudeGameTester.stop","log"],["ClaudeGameTester.drag_card","ClaudeGameTester.log"],["_on_force_produced","_create_floating_text"],["Hero.build","_init"],["ClaudeGameTester.start","BattlegroundEntity.build"],["get_card","__get_zone_object"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.get_canvas_info"],["_trigger_disruption","_apply_disruption"],["ClaudeGameTester.click","ClaudeGameTester.click"],["TypeSafetyFixer.fix_file","type_parameters"],["TypeSafetyChecker.check_file","_check_collection_typing"],["clear_all_zones","clear"],["get_cards_in_order","has_card_at"],["ClaudeGameTester.get_canvas_info","log"],["build_field_indices","add_index_key_variants"],["main","test_card_gameplay"],["_exit_tree","__on_mouse_exited"],["_ready","__setup_background"],["add_force","get_force_resource"],["show_slot_effect","_create_floating_text"],["Library.shuffle","Library.shuffle"],["set_entity_data","set_entity_data"],["ClaudeGameTester.compare_screenshots","log"],["toggle_card_selection_on","__raise_card"],["PublicSheetsToJsonExporter._convert_value","PublicSheetsToJsonExporter._apply_enum_prefix"],["lookup_in_data","resolve_filter_value"],["draw_card","add_card_to_zone"],["PublicSheetsToJsonExporter._convert_value","PublicSheetsToJsonExporter._parse_params_field"],["TypeSafetyFixer.fix_file","TypeSafetyFixer.type_parameters"],["_on_selected_changed","toggle_card_selection_on"],["signal_unsatisfied","get_unsatisfied_resources"],["PublicSheetsToJsonExporter.convert_to_json","PublicSheetsToJsonExporter._create_array_dict"],["TypeSafetyFixer.type_parameters","TypeSafetyFixer.infer_type_from_literal"],["place_card","has_card_at"],["reset","reset"],["_on_force_consumed","_create_floating_text"],["ClaudeGameTester.test_card_gameplay","log"],["add_card","arrange_cards"],["_check_script","_check_source_for_errors"],["_on_force_produced","_get_force_name"],["ClaudeGameTester.type_text","ClaudeGameTester.log"],["ClaudeGameTester.start","ClaudeGameTester.build"],["add_dragging_visual","get_global_mouse_position"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.press_key"],["resolve_value","resolve_configuration_reference"],["TypeSafetyChecker.check_file","_check_nested_dictionary"],["PublicSheetsToJsonExporter._parse_params_field","_resolve_configuration_reference"],["lookup_in_data","lookup_in_data_linear"],["ClaudeGameTester.wait","log"],["main","ClaudeGameTester.test_basic_interaction"],["ClaudeGameTester.click_canvas","ClaudeGameTester.click"],["PublicSheetsToJsonExporter.convert_to_json","PublicSheetsToJsonExporter._parse_params_field"],["main","fix_static_data"],["ClaudeGameTester.stop","ClaudeGameTester.stop"],["lookup_in_data_linear","compare_numeric_values"],["ClaudeGameTester.test_card_gameplay","take_screenshot"],["ClaudeGameTester.type_text","log"],["draw_card","get_count"],["resolve_json_data","convert_array_to_nested_dict"],["draw_card","get_all_cards"],["main","fix_all_remaining"],["_process","get_current_tick"],["_ready","__update_empty_visual"],["ClaudeGameTester.find_clickable_areas","log"],["main","fix_countdown"],["Hero.build","Library._init"],["draw_new_hand","Library.get_count"],["_on_force_consumed","_get_force_name"],["_process","__update_progress_display"],["PublicSheetsToJsonExporter.export_sheet_to_json","get_public_sheet_data"],["create_timer","create_timer"],["move_card_to_zone2","Library.get_count"],["PublicSheetsToJsonExporter.export_sheet_to_json","PublicSheetsToJsonExporter.convert_to_json"],["ClaudeGameTester.wait_for_animation","log"],["consume_forces","consume_force"],["ClaudeGameTester.test_card_gameplay","drag_card"],["main","fix_arrays_and_dicts"],["process_beat","get_card_at"],["discard_hand","Library.get_all_cards"],["_ready","_update_display"],["_on_time_updated","_update_display"],["PublicSheetsToJsonExporter._convert_value","_apply_enum_prefix"],["_get_target_by_type","get_bottommost_gremlin"],["set_empty_visual","__update_empty_visual"],["main","TypeSafetyChecker.check_file"],["PublicSheetsToJsonExporter.export_sheet_to_json","PublicSheetsToJsonExporter.get_public_sheet_data"],["TypeSafetyFixer.fix_file","TypeSafetyFixer.infer_type_from_literal"],["PublicSheetsToJsonExporter.convert_to_json","_create_array_dict"],["_check_script","_extract_class_name"],["set_label_font","get_very_small_font_size"],["_on_damage_dealt","_create_floating_text"],["ClaudeGameTester.start","start"],["_process","render_label"],["move_card_to_zone2","Library.add_card"],["move_card_to_zone2","__get_zone_object"],["has_forces","has_force"],["add_dragging_visual","get_relevant_visual"],["execute_below_threshold","get_gremlins_in_order"],["Hero.build","Mainplate._init"],["is_active_physical","to_logical"],["ClaudeGameTester.test_basic_interaction","log"],["assign_random_bonus_squares","has_card_at"],["get_cards_for_selection","__get_card_for_selection"],["_on_card_mouse_entered","__calculate_base_position_for_card"],["advance_time","__advance_beats_instant"],["_init","check_autoloads"],["add_card_to_zone","add_card"],["ClaudeGameTester.test_card_gameplay","ClaudeGameTester.click_button"],["assign_random_bonus_squares","set_bonus_square"],["PublicSheetsToJsonExporter.export_sheet_to_json","PublicSheetsToJsonExporter.export_to_file"],["ClaudeGameTester.stop","ClaudeGameTester.log"],["TypeSafetyFixer.fix_file","TypeSafetyFixer.infer_node_type"],["print_hand_size","Library.get_count"],["ClaudeGameTester.take_screenshot","log"],["main","export_sheet_to_json"],["PublicSheetsToJsonExporter._parse_params_field","PublicSheetsToJsonExporter._resolve_configuration_reference"],["add_card_to_deck","get_count"],["ClaudeGameTester.start","log"],["set_string_text","set_label_font"],["ClaudeGameTester.test_basic_interaction","take_screenshot"],["ClaudeGameTester.get_canvas_info","ClaudeGameTester.log"],["_get_target_by_type","get_weakest_gremlin"],["spawn_test_gremlins","__create_gremlin_from_data"],["main","fix_more_missing_types"],["to_physical","is_valid_logical"],["move_card_to_zone2","get_count"],["main","TypeSafetyChecker.print_report"],["_input","arrange_cards"],["TypeSafetyChecker.check_file","TypeSafetyChecker._check_function_typing"],["ClaudeGameTester.compare_screenshots","ClaudeGameTester.log"],["take_damage","_on_defeated"],["resolve_json_record","resolve_value"],["get_id","get_entity"],["satisfy","__satisfy_requirement"],["PublicSheetsToJsonExporter._convert_value","_parse_params_field"],["count_cards_with_tag","get_cards_in_order"],["_check_directory_recursive","_check_script"],["clear","Library.clear"],["remove_card","arrange_cards"],["get_active_physical_positions","to_physical"],["ClaudeGameTester.test_card_gameplay","ClaudeGameTester.log"],["place_card","__trigger_bonus"],["main","ClaudeGameTester.test_card_gameplay"],["ClaudeGameTester.wait","ClaudeGameTester.log"],["main","ClaudeGameTester.start"],["_on_damage_dealt","_create_impact_particles"],["ClaudeGameTester.stop","wait"],["get_card_ids_in_zone","__get_zone_object"],["process_beat","_trigger_disruption"],["satisfy","can_satisfy"],["TypeSafetyChecker._check_function_typing","TypeSafetyChecker._split_params"],["process_beat","__process_listeners_phase"],["get_card_ids_in_zone","get_all_card_ids"],["get_cards_for_selection","Library.get_count"],["PublicSheetsToJsonExporter.convert_to_json","_parse_params_field"],["main","stop"],["lookup_in_data_linear","resolve_filter_value"],["main","TypeSafetyFixer.fix_file"],["set_label_font","get_label"],["add","is_position_empty"],["get_adjacent_positions","is_valid_position"],["discard_hand","get_all_cards"],["ClaudeGameTester.stop","stop"],["ClaudeGameTester.find_clickable_areas","ClaudeGameTester.log"],["Entity.build_entity","__generate_instance_id"],["_ready","_ready"],["main","ClaudeGameTester.stop"],["ClaudeGameTester.test_basic_interaction","click"],["TypeSafetyChecker._check_function_typing","_split_params"],["ClaudeGameTester.click_button","log"],["satisfy","signal_unsatisfied"],["ClaudeGameTester.wait_for_animation","ClaudeGameTester.log"],["has_id","contains"],["reset","__calculate_offset"],["set_as_bonus_square","__update_bonus_visual"],["resolve_value","parse_enum"],["TypeSafetyChecker.check_file","TypeSafetyChecker._check_onready_typing"],["toggle_card_selection_on","deselect_current_card"],["add_cards_to_deck","add_card_to_deck"],["count_gears_with_tag","get_occupied_slots"],["draw_card","Library.draw_top"],["has_force","get_force_resource"],["_on_status_applied","_create_floating_text"],["clear","clear"],["_on_force_produced","_create_production_particles"],["_on_resume_pressed","resume"],["_notification","arrange_cards"],["_input","remove_dragging_visual"],["signal_moved","signal_moved"],["_check_source_for_errors","_extract_function_name"],["PublicSheetsToJsonExporter._convert_value","_resolve_configuration_reference"],["load_json_file","resolve_json_data"],["can_accept_card_at_physical","is_valid_position"],["set_label_font","get_large_font_size"],["contains","get_position"],["Hero.build","Cost._init"],["show_slot_effect","_create_production_particles"],["remove","contains"],["set_label_font","get_small_font_size"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.log"],["ClaudeGameTester.test_card_gameplay","ClaudeGameTester.drag_card"],["_on_selected_changed","deselect_current_card"],["get_cards_in_order","__get_positions_in_order"],["process_beat","__should_card_activate"],["_on_status_applied","_create_status_particles"],["_init","setup_stats_listeners"],["ClaudeGameTester.test_card_gameplay","ClaudeGameTester.take_screenshot"],["ClaudeGameTester.click","log"],["draw_card","shuffle"],["draw_card","move_card_to_zone2"],["activate_slot_effect","activate_slot_effect"],["apply_poison_to_target","_get_target_by_type"],["ClaudeGameTester.start","Mainplate.build"],["ClaudeGameTester.take_screenshot","ClaudeGameTester.log"],["get_card","Library.get_card"],["TypeSafetyChecker.check_file","_check_variable_typing"],["ClaudeGameTester.start","ClaudeGameTester.log"],["set_text","set_string_text"],["activate","activate"],["set_sprite","__update_min_size"],["add_gremlin","_find_empty_slot"],["check_all_scripts","_check_directory_recursive"],["lookup_in_data","get_data_type_name"],["PublicSheetsToJsonExporter._convert_value","_is_float"],["decrement_all_status_effects","decrement_status_effect"],["ClaudeGameTester.start","build"],["ClaudeGameTester.click_button","ClaudeGameTester.click"],["ClaudeGameTester.start","Card.build"],["get_global_mouse_position","get_global_mouse_position"],["process_beat","_trigger_poison"],["_ready","build_field_indices"],["spawn_wave","_spawn_gremlin"],["draw_new_hand","get_count"],["_on_card_mouse_exited","arrange_cards"],["shuffle_libraries","shuffle"],["to_logical","is_valid_logical"],["set_highlighted","__update_bonus_visual"],["ClaudeGameTester.click_button","click"],["is_isolated","get_adjacent_positions"],["end_turn","disallow_activations"],["add_card_to_zone","Library.add_card"],["process_beat","__process_gears_phase"],["check_all_scripts","_check_script"],["reset","__update_slot_visuals"],["add_card_to_zone","__get_zone_object"],["ClaudeGameTester.click_canvas","log"],["main","fix_file"],["main","PublicSheetsToJsonExporter.export_sheet_to_json"],["ClaudeGameTester.build","ClaudeGameTester.log"],["PublicSheetsToJsonExporter.convert_to_json","PublicSheetsToJsonExporter._convert_value"],["ClaudeGameTester.start","Goal.build"],["_on_time_updated","_animate_beat_change"],["TypeSafetyFixer.type_parameters","infer_type_from_literal"],["PublicSheetsToJsonExporter._parse_params_field","PublicSheetsToJsonExporter._apply_enum_prefix"],["set_card_data","add_slot_icon"],["main","wait"],["TypeSafetyChecker.check_file","_check_onready_typing"],["PublicSheetsToJsonExporter._convert_value","PublicSheetsToJsonExporter._is_float"],["PublicSheetsToJsonExporter._convert_value","PublicSheetsToJsonExporter._resolve_configuration_reference"],["main","check_godot_compilation"],["ClaudeGameTester.start","ClaudeGameTester.start"],["draw_new_hand","discard_hand"],["move","get_position"],["ClaudeGameTester.build","log"],["Library.shuffle","shuffle"],["get_card_ids_in_zone","Library.get_all_card_ids"],["process_beat","__process_gremlins_phase"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.take_screenshot"],["process_beat","has_card_at"],["_on_mouse_entered","create_card_ui"],["ClaudeGameTester.click_button","ClaudeGameTester.log"],["ClaudeGameTester.click","click"],["add_forces","add_force"],["main","ClaudeGameTester.wait"],["resolve_json_data","resolve_json_record"],["clear_hovered_known","clear_hovered_force"],["ClaudeGameTester.test_basic_interaction","ClaudeGameTester.click"],["load_json_file","resolve_json_record"],["set_relic","get_label"],["ClaudeGameTester.drag_card","log"],["resolve_value","resolve_value"],["remove_gear_at_physical","request_card_removal"],["_on_mouse_exited","_on_mouse_exited"],["main","fix_more_functions"],["set_bonus_square","is_valid_position"],["ClaudeGameTester.stop","ClaudeGameTester.wait"],["print_hand_size","get_count"],["set_string_text","get_label"],["move","is_position_empty"],["_on_mouse_entered","_on_mouse_entered"],["process_beat","process_beat"],["resolve_value","normalize_numeric_value"],["get_unsatisfied_resources","__can_satisfy_requirement"],["ClaudeGameTester.start","ClaudeGameTester.click_canvas"]],"d":{"TYPE_SAFETY_HOOK.md":["Type Safety Presubmit Hook Documentation","Overview","Installation","What It Checks","1. Variable Type Declarations","\u274c BAD - Untyped variables","\u2705 GOOD - Typed variables","2. Function Parameters and Return Types","\u274c BAD - Untyped function","\u2705 GOOD - Fully typed function"],"ofl_font_assets/andiamo/README.md":["Andiamo a bruciargli la casa","Descrizione"],"ofl_font_assets/garamontio_capo/README.md":["Garamontio Capo","Descrizione"],"src/CLAUDE.md":["Directory Context Instructions","IMPORTANT: Read Directory Documentation First","Why This Matters","Before You Code"],"src/PATTERNS.md":["Src - Source Code Patterns","Type Safety","Example of correct typing:","CORRECT:","WRONG:","Resource and Script Loading","Example:","CORRECT:","Preload scenes and resources only (NOT scripts with class_name)","WRONG:"],"src/PURPOSE.md":["Src - Source Code Structure","What goes here:","When to use:","Structure:"],"src/scenes/core/CLAUDE.md":["Directory Context Instructions","IMPORTANT: Read Directory Documentation First","Why This Matters","Before You Code"],"src/scenes/core/PATTERNS.md":["Core - Coding Patterns","Interface-First Development","Core Principle","Decision Tree for Any Change","Define/Modify Interfaces (when needed)","Implementation Guidelines","Interface Requirements","Red Flags (Stop and Fix)","Core Architecture","Data structures:"],"src/scenes/core/PURPOSE.md":["Core - Game Logic and Systems","What goes here:","When to use:","Key principles:"],"src/scenes/core/entities/CLAUDE.md":["Directory Context Instructions","IMPORTANT: Read Directory Documentation First","Why This Matters","Before You Code"],"src/scenes/core/entities/PATTERNS.md":["Core Entities - Coding Patterns","Instance IDs","Instance Management Patterns","Entity structure:","Component patterns:","Entity creation:","Entity operations:","ID management:"],"src/scenes/core/entities/PURPOSE.md":["Core Entities - Game Entity System","What goes here:","When to use:","Entity types:"],"src/scenes/data/GOOGLE_SHEETS.md":["Google Sheets Data Sources","Tourbillon Card Data Sheet","Authentication","Sheet Structure","Current Contents","Usage"],"src/scenes/data/PATTERNS.md":["Data Patterns and Parsing Guide","Google Sheets Integration","Reading Card Data from Google Sheets","Python JSON Exporter (`json_exporter.py`)","Key Functions","Usage with Google Sheets Data","After fetching from Google Sheets (via Node.js script)","Convert to game format","Write to card_data.json","Data Flow"],"src/scenes/ui/CLAUDE.md":["Directory Context Instructions","IMPORTANT: Read Directory Documentation First","Why This Matters","Before You Code"],"src/scenes/ui/PATTERNS.md":["UI - Coding Patterns","Creating UI Components","Core Principles","Privacy Conventions for UI","Component structure:","State management:","Styling patterns:","Event handling:","Signal Handler Naming","Component reuse:"],"src/scenes/ui/PURPOSE.md":["UI - User Interface Components","What goes here:","When to use:","Organization:","Key principles:"],"src/scenes/ui/entities/CLAUDE.md":["Directory Context Instructions","IMPORTANT: Read Directory Documentation First","Why This Matters","Before You Code"],"src/scenes/ui/entities/PATTERNS.md":["UI Entities - Coding Patterns","Entity display:","Status indicators:","Interaction patterns:","Animation:","Component props:"],"src/scenes/ui/entities/PURPOSE.md":["UI Entities - Entity Display Components","What goes here:","When to use:","Organization:"]},"deps":{"check_type_safety.py":["sys","re","os","subprocess","tempfile","pathlib","typing","argparse"],"claude_game_tester.py":["subprocess","time","sys","os","pathlib","typing","json","playwright.sync_api","playwright.sync_api","argparse"],"fix_final_types.py":["sys","re","pathlib"],"fix_last_types.py":["re","pathlib"],"fix_remaining_types.py":["sys","re","pathlib"],"fix_type_safety.py":["sys","re","os","pathlib","typing","argparse"],"src/scenes/data/json_exporter.py":["json","csv","requests  # type: ignore","argparse","sys","os","io"]},"dir_purposes":{"owned_assets":"Test files and test utilities","src":"Source code root directory"},"staleness":1756341579.679527}