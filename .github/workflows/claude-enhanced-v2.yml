name: Claude Enhanced V2

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  claude-respond:
    runs-on: [self-hosted, claude-pro]
    
    if: >
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'pull_request' && github.event.pull_request && contains(github.event.pull_request.body, '@claude'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Environment
        run: |
          git config --global user.name "Claude Assistant"
          git config --global user.email "claude@assistant.local"
          echo "/home/rosswolf/.npm-global/bin" >> $GITHUB_PATH
          mkdir -p $HOME/.claude/sessions
          mkdir -p artifacts
          
      - name: Get Issue Context
        id: get_context
        run: |
          # Get issue/PR number
          if [ "${{ github.event_name }}" = "issue_comment" ] || [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            ISSUE_NUMBER="${{ github.event.pull_request.number }}"
          else
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          fi
          
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          
          # Get latest request
          if [ "${{ github.event_name }}" = "issue_comment" ] || [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            echo "${{ github.event.comment.body }}" > latest_request.txt
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "${{ github.event.issue.body }}" > latest_request.txt
          else
            echo "${{ github.event.pull_request.body }}" > latest_request.txt
          fi
          
      - name: Check for repository parent session
        id: check_parent
        run: |
          PARENT_SESSION="parent-repo-castlebuilder"
          echo "Checking for repository-wide parent session: $PARENT_SESSION"
          
          if .github/scripts/session_manager.sh exists "$PARENT_SESSION" | grep -q "true"; then
            echo "Repository parent session exists"
            echo "parent_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Repository parent session does not exist"
            echo "parent_exists=false" >> $GITHUB_OUTPUT
          fi
          echo "parent_session=$PARENT_SESSION" >> $GITHUB_OUTPUT
          
      - name: Create parent session if needed
        id: create_parent
        if: steps.check_parent.outputs.parent_exists == 'false'
        run: |
          echo "Creating repository parent session (5-10 minutes)..."
          PARENT_SESSION=$(.github/scripts/session_manager.sh create-parent "castlebuilder")
          
          if [ $? -eq 0 ]; then
            echo "Parent session created: $PARENT_SESSION"
            echo "parent_session=$PARENT_SESSION" >> $GITHUB_OUTPUT
          else
            echo "Failed to create parent session"
            exit 1
          fi
          
      - name: Get parent session ID
        id: get_parent
        run: |
          if [ "${{ steps.check_parent.outputs.parent_exists }}" = "true" ]; then
            PARENT_SESSION="${{ steps.check_parent.outputs.parent_session }}"
          else
            PARENT_SESSION="${{ steps.create_parent.outputs.parent_session }}"
          fi
          echo "parent_session=$PARENT_SESSION" >> $GITHUB_OUTPUT
          
      - name: Fork child agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PARENT_SESSION="${{ steps.get_parent.outputs.parent_session }}"
          ISSUE_NUMBER="${{ steps.get_context.outputs.issue_number }}"
          USER_REQUEST=$(cat latest_request.txt)
          
          # Build context
          ISSUE_CONTEXT="GitHub Issue #${ISSUE_NUMBER}
          Event: ${{ github.event_name }}
          Repository: ${{ github.repository }}"
          
          echo "Forking child from parent: $PARENT_SESSION"
          echo "Issue: #${ISSUE_NUMBER}"
          
          # Fork child and capture response
          .github/scripts/session_manager.sh fork-child \
            "$PARENT_SESSION" \
            "general" \
            "$USER_REQUEST" \
            "$ISSUE_CONTEXT" \
            > response.md 2>&1
          
          # Ensure response exists
          if [ ! -s response.md ]; then
            echo "I'm processing your request through the enhanced session-based workflow." > response.md
          fi
          
      - name: Post response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const response = fs.readFileSync('response.md', 'utf8');
            const issue_number = parseInt('${{ steps.get_context.outputs.issue_number }}');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: response
            });