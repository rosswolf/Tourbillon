name: Claude With Manual Session

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  claude-respond:
    # Only run if comment contains @claude
    if: >
      github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude') ||
      github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude') ||
      github.event_name == 'issues' && contains(github.event.issue.body, '@claude') ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.body, '@claude')
    
    runs-on: [self-hosted, claude-pro]
    
    env:
      # IMPORTANT: Replace this with your actual parent session ID from interactive mode
      PARENT_SESSION_ID: "YOUR_SESSION_ID_HERE"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Environment
        run: |
          git config --global user.name "Claude Assistant"
          git config --global user.email "claude@assistant.local"
          echo "/home/rosswolf/.npm-global/bin" >> $GITHUB_PATH
          mkdir -p artifacts
          
      - name: Get Issue Context
        id: get_context
        run: |
          # Get issue/PR number
          if [ "${{ github.event_name }}" = "issue_comment" ] || [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            ISSUE_NUMBER="${{ github.event.issue.number || github.event.pull_request.number }}"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          else
            ISSUE_NUMBER="${{ github.event.pull_request.number }}"
          fi
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          
          # Get latest request
          if [ "${{ github.event_name }}" = "issue_comment" ] || [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            echo "${{ github.event.comment.body }}" > latest_request.txt
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "${{ github.event.issue.body }}" > latest_request.txt
          else
            echo "${{ github.event.pull_request.body }}" > latest_request.txt
          fi
          
      - name: Resume Parent Session
        run: |
          echo "=== Resuming Parent Session ==="
          echo "Session ID: $PARENT_SESSION_ID"
          
          # Check if session ID is set
          if [ "$PARENT_SESSION_ID" = "YOUR_SESSION_ID_HERE" ]; then
            echo "ERROR: Parent session ID not configured!"
            echo "Please:"
            echo "1. Run 'claude' in /home/rosswolf/Code/castlebuilder"
            echo "2. Initialize the parent session"
            echo "3. Get the session ID with /session"
            echo "4. Update PARENT_SESSION_ID in this workflow"
            echo ""
            echo "Creating fallback response..."
            echo "The parent session is not configured. Please set up the parent session first." > response.md
            exit 0
          fi
          
          # Test if session can be resumed
          echo "Testing session resume..."
          TEST_RESPONSE=$(echo "Confirm you have castlebuilder context" | claude --resume "$PARENT_SESSION_ID" --print 2>&1 || true)
          
          if echo "$TEST_RESPONSE" | grep -q "No conversation found"; then
            echo "ERROR: Session cannot be resumed!"
            echo "The session ID may be invalid or expired."
            echo "Please create a new parent session."
            echo "Session unavailable. Using fallback response." > response.md
            exit 0
          fi
          
          echo "Session resumed successfully!"
          
          # Build request for Claude
          USER_REQUEST=$(cat latest_request.txt)
          ISSUE_NUMBER="${{ steps.get_context.outputs.issue_number }}"
          
          REQUEST="GitHub Issue #${ISSUE_NUMBER}
Event: ${{ github.event_name }}
Repository: ${{ github.repository }}

User Request:
$USER_REQUEST

Please respond to this GitHub issue/PR comment. You have full access to the repository and can create pull requests using 'gh pr create' if needed."
          
          # Send request to Claude using the resumed session
          echo "$REQUEST" | claude --resume "$PARENT_SESSION_ID" --print \
            --add-dir "${{ github.workspace }}" \
            --dangerously-skip-permissions \
            > response.md 2>&1 || {
            echo "Error occurred while processing request" > response.md
          }
          
      - name: Post response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const response = fs.readFileSync('response.md', 'utf8');
            const issue_number = parseInt('${{ steps.get_context.outputs.issue_number }}');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: response
            });
            
      - name: Save artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: conversation-${{ github.run_id }}
          path: |
            latest_request.txt
            response.md
          retention-days: 7