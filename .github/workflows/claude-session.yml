name: Claude Session Workflow

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]

jobs:
  respond:
    if: contains(github.event.comment.body, '@claude') || contains(github.event.issue.body, '@claude')
    runs-on: [self-hosted, claude-pro]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup
        run: |
          git config --global user.name "Claude Assistant"
          git config --global user.email "claude@assistant.local"
          echo "/home/rosswolf/.npm-global/bin" >> $GITHUB_PATH
          
      - name: Add eyes emoji
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              if (context.eventName === 'issue_comment') {
                await github.rest.reactions.createForIssueComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: context.payload.comment.id,
                  content: 'eyes'
                });
              } else {
                await github.rest.reactions.createForIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  content: 'eyes'
                });
              }
            } catch (e) {
              console.log('Could not add reaction');
            }
            
      - name: Get request
        id: get_request
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "${{ github.event.comment.body }}" > request.txt
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          else
            echo "${{ github.event.issue.body }}" > request.txt
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Verify Claude Session
        run: |
          SESSION_ID="25fd8500-045a-4a40-bb74-f1f9e60e46ce"
          PROJECT_PATH="-home-rosswolf-Code-castlebuilder"
          
          # Since this is a self-hosted runner, session files should already be available
          SESSION_FILE="$HOME/.claude/projects/$PROJECT_PATH/${SESSION_ID}.jsonl"
          
          if [ -f "$SESSION_FILE" ]; then
            echo "✓ Session file found at: $SESSION_FILE"
            echo "  File size: $(stat -c%s "$SESSION_FILE") bytes"
            echo "  Lines: $(wc -l < "$SESSION_FILE")"
          else
            echo "✗ Session file not found at: $SESSION_FILE"
            echo "Checking claude directory structure:"
            ls -la ~/.claude/ || echo "No .claude directory"
            ls -la ~/.claude/projects/ || echo "No projects directory"
            exit 1
          fi
          
      - name: Call Claude
        run: |
          SESSION_ID="25fd8500-045a-4a40-bb74-f1f9e60e46ce"
          ISSUE_NUMBER="${{ steps.get_request.outputs.issue_number }}"
          
          # Using session resumption with --print flag (FIXED!)
          echo "=== Resuming Claude session with --print flag ==="
          
          # Only proceed if response.md doesn't exist
          if [ -f response.md ]; then
            exit 0
          fi
          
          # Build request
          REQUEST="GitHub Issue #${ISSUE_NUMBER}
          Repository: ${{ github.repository }}
          Working Directory: ${{ github.workspace }}
          
          User Request:
          $(cat request.txt)
          
          Instructions:
          - Respond helpfully to the issue/comment
          - You have full repository access
          - To create a PR:
            1. git checkout -b branch-name-$(date +%s)
            2. Make changes
            3. git add -A && git commit -m 'message'
            4. git push origin HEAD
            5. gh pr create --title 'title' --body 'body'
          - Include PR link if you create one"
          
          # Resume session with --print flag (the fix!)
          # Note: Removed --model opus as it may conflict with --resume
          echo "$REQUEST" | claude \
            --print \
            --resume "$SESSION_ID" \
            --add-dir "${{ github.workspace }}" \
            --dangerously-skip-permissions > response.md 2>&1 || echo "Error calling Claude" > response.md
            
      - name: Post response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const response = fs.readFileSync('response.md', 'utf8');
            const issue_number = ${{ steps.get_request.outputs.issue_number }};
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: response
            });